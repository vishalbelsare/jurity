Search.setIndex({"docnames": ["about_fairness", "about_reco", "api", "index", "install", "quick"], "filenames": ["about_fairness.rst", "about_reco.rst", "api.rst", "index.rst", "install.rst", "quick.rst"], "titles": ["About Algorithmic Fairness", "About Recommenders Metrics", "Jurity Public API", "Jurity: Fairness &amp; Evaluation Library", "Installation", "Quick Start"], "terms": {"below": [0, 1], "see": [0, 2, 3, 5], "mathemat": 0, "definit": [0, 1], "each": [0, 1, 2], "metric": 0, "librari": 0, "denot": [0, 1, 2], "fpr": [0, 2], "tpr": [0, 2], "group": [0, 2], "1": [0, 1, 2, 3, 5], "2": [0, 1, 2, 3, 5], "frac": [0, 1, 2], "fpr_": [0, 2], "d": [0, 2], "text": [0, 2], "tpr_": [0, 2], "i": [0, 1, 2, 3, 4, 5], "ratio": [0, 2], "posit": [0, 1, 2], "outcom": [0, 2], "binari": [0, 3, 5], "classif": 0, "task": [0, 2], "between": [0, 1, 2], "member": 0, "respect": [0, 1], "p": [0, 1, 2], "hat": [0, 1, 2], "y": [0, 2], "calcul": [0, 1, 2], "true": [0, 2], "exampl": [0, 2, 4], "dataset": [0, 2], "tp": [0, 2], "condit": [0, 2], "protect": [0, 2], "attribut": [0, 2], "measur": [0, 1, 2], "lack": [0, 2], "thereof": [0, 2], "fals": [0, 2, 3], "neg": [0, 2, 3], "rate": [0, 2, 3, 5], "across": [0, 2], "In": [0, 1, 2], "practic": [0, 1, 2], "thi": [0, 1, 2], "implement": [0, 1, 2], "valu": [0, 1, 2, 3, 5], "e": [0, 2], "x": [0, 1, 2, 4], "0": [0, 1, 2, 3, 5], "mid": [0, 2], "g": [0, 2], "inaccur": 0, "model": [0, 1], "It": [0, 1, 2], "us": [0, 1, 2, 4], "fn": [0, 2], "n": [0, 1, 2, 3, 5], "propos": [0, 2], "unifi": [0, 2], "individu": [0, 2], "With": [0, 2], "b_i": [0, 2], "_i": [0, 2], "y_i": [0, 2], "mathcal": [0, 2], "alpha": [0, 2], "begin": [0, 2], "case": [0, 1, 2], "sum_": [0, 1, 2], "left": [0, 1, 2], "mu": [0, 2], "right": [0, 1, 2], "ne": [0, 2], "b_": [0, 2], "ln": [0, 2], "end": [0, 2], "refer": [0, 2], "t": [0, 1, 2], "speicher": [0, 2], "h": [0, 1, 2], "heidari": [0, 2], "grgic": [0, 2], "hlaca": [0, 2], "k": [0, 1, 2, 3, 5], "gummadi": [0, 2], "A": [0, 1, 2], "singla": [0, 2], "weller": [0, 2], "m": [0, 1, 2, 4], "b": [0, 2, 3, 5], "zafar": [0, 2], "approach": [0, 2], "quantifi": [0, 2], "unfair": [0, 2], "via": [0, 2, 3], "inequ": [0, 2], "indic": [0, 1, 2], "acm": [0, 2], "sigkdd": [0, 2], "intern": [0, 1, 2], "confer": [0, 1, 2], "knowledg": [0, 2], "discoveri": [0, 2], "data": [0, 1, 2, 3, 5], "mine": [0, 2], "2018": [0, 2], "defin": [0, 2], "situat": [0, 2], "when": [0, 1, 2], "accuraci": [0, 1, 2, 3, 5], "decis": [0, 2], "two": [0, 2, 4], "probabl": [0, 1, 2], "bia": 0, "mitig": 0, "techniqu": 0, "where": [0, 1, 2], "subset": [0, 1, 2], "classifi": [0, 2], "flip": [0, 2], "uniform": 0, "random": [0, 2], "achiev": [0, 2], "learn": [0, 1, 2, 3, 5], "constrain": 0, "optim": [0, 2], "moritz": [0, 2], "hardt": [0, 2], "eric": [0, 2], "price": [0, 2], "nathan": 0, "srebro": [0, 2], "2016": [0, 2], "supervis": [0, 2], "proceed": [0, 1, 2], "30th": 0, "neural": [0, 2], "inform": [0, 2], "process": [0, 1, 2], "system": [0, 1, 2, 3], "nip": 0, "16": 0, "juriti": [1, 4, 5], "offer": 1, "variou": 1, "standard": [1, 3, 4], "perform": [1, 2], "while": [1, 2], "commun": 1, "agre": 1, "can": [1, 2, 4], "differ": [1, 2, 3], "especi": 1, "come": 1, "edg": 1, "For": 1, "set": [1, 2], "actual": [1, 2, 3, 5], "user": [1, 2], "predict": [1, 2, 3, 5], "a_i": [1, 2], "p_i": [1, 2], "repres": [1, 2], "item": [1, 2], "directli": [1, 2], "interact": [1, 2], "three": [1, 2], "reward": [1, 2], "estim": [1, 2], "method": [1, 2], "direct": [1, 2], "match": [1, 2], "over": [1, 2], "pair": [1, 2], "appear": 1, "both": 1, "let": [1, 2], "c": [1, 3, 5], "m_i": 1, "an": [1, 2], "function": [1, 2], "produc": 1, "thei": 1, "didn": 1, "invers": [1, 2], "propens": [1, 2], "score": [1, 2, 3, 5], "ip": [1, 2], "weight": [1, 2], "how": [1, 2], "like": [1, 2], "were": [1, 2], "histor": [1, 2], "polici": [1, 2], "saw": [1, 2], "due": 1, "less": 1, "ar": [1, 2, 4], "given": [1, 2], "more": [1, 2], "sum": [1, 2], "r_a": [1, 2], "time": [1, 2], "total": [1, 2], "size": [1, 2], "test": [1, 2, 3, 5], "observ": [1, 2], "boolean": [1, 2], "whether": [1, 2], "ha": [1, 2], "being": [1, 2], "context": [1, 2], "doubli": [1, 2], "robust": [1, 2], "dr": [1, 2], "combin": [1, 2], "correct": [1, 2], "base": [1, 2], "wa": [1, 2, 4], "r": [1, 2], "_a": 1, "At": [1, 2], "high": [1, 2], "level": [1, 2], "avail": [1, 2, 5], "If": [1, 2], "second": [1, 2], "term": [1, 2], "onli": [1, 2], "The": [1, 2, 3, 4], "dud\u00edk": [1, 2], "miroslav": [1, 2], "john": [1, 2], "langford": [1, 2], "lihong": [1, 2], "li": [1, 2], "evalu": [1, 2], "28th": [1, 2], "machin": [1, 2], "2011": [1, 2], "arxiv": [1, 2], "preprint": [1, 2], "1103": [1, 2], "4601": [1, 2], "randomli": 1, "chosen": 1, "relev": [1, 2], "instanc": [1, 2], "higher": [1, 2], "than": 1, "non": [1, 2], "one": [1, 2], "f": [1, 2], "return": [1, 2], "th": [1, 2], "t_0": 1, "t_1": 1, "put": 1, "other": [1, 2, 3, 5], "some": [1, 2], "rel": [1, 2], "p_": [1, 2], "which": [1, 2], "": [1, 2], "all": [1, 2, 4], "oper": [1, 2], "filter": 1, "taken": 1, "account": [1, 2], "line": 1, "industri": 1, "There": [1, 2, 4], "further": 1, "relat": 1, "also": [1, 2, 3, 5], "have": [1, 2], "done": 1, "avoid": 1, "divid": 1, "error": 1, "consist": [1, 2], "abl": 1, "pinpoint": 1, "would": 1, "provid": [1, 2, 3], "5": [1, 3, 5], "receiv": [1, 2], "alwai": 1, "them": 1, "cap": [1, 2], "captur": [1, 2], "__k__": 1, "enough": 1, "get": [1, 2], "even": 1, "larg": 1, "amount": 1, "irrelev": 1, "identifi": 1, "sensit": 1, "version": [1, 4], "top": [1, 2], "most": 1, "import": [1, 2, 3, 5], "effect": 1, "last": 1, "same": [1, 2], "min": [1, 2], "precision_i": [1, 2], "improv": 1, "highest": 1, "lowest": 1, "log_2": [1, 2], "qualiti": 1, "notion": 1, "made": [1, 2], "from": [1, 2, 3, 5], "rang": [1, 2], "diversifi": [1, 2], "u": [1, 2], "uniqu": [1, 2], "u_i": [1, 2], "u_j": [1, 2], "j": [1, 2], "cdot": [1, 2], "r_": [1, 2], "vector": [1, 2], "foral": [1, 2], "mbox": [1, 2], "cosin": [1, 2], "_distanc": [1, 2], "By": [1, 2], "default": [1, 2], "report": [1, 2], "number": [1, 2], "num_run": [1, 2], "10": [1, 2], "run": [1, 2, 4], "user_sample_s": [1, 2], "10000": [1, 2], "eas": [1, 2], "comput": [1, 2], "meanwhil": [1, 2], "close": [1, 2], "approxim": [1, 2], "none": [1, 2, 4], "featur": [1, 2], "pairwis": [1, 2], "distanc": [1, 2], "Then": [1, 2], "result": [1, 2, 3, 5], "v_p": [1, 2], "v_q": [1, 2], "q": [1, 2], "class": [2, 3, 5], "binaryclassificationmetr": [2, 3, 5], "namedtupl": 2, "auc": [2, 3, 5], "object": 2, "static": 2, "get_scor": [2, 3, 5], "list": [2, 3, 4], "ndarrai": 2, "seri": 2, "likelihood": [2, 3, 5], "sample_weight": 2, "float": 2, "area": [2, 3], "under": [2, 3], "characterist": 2, "curv": [2, 3], "roc": 2, "paramet": 2, "union": 2, "np": 2, "pd": [2, 3, 5], "ground": 2, "truth": 2, "label": [2, 3, 5], "sampl": 2, "type": 2, "recal": [2, 3, 5], "fraction": 2, "correctli": 2, "f1": [2, 3, 5], "known": 2, "balanc": 2, "averag": [2, 3], "precis": [2, 3, 5], "equal": [2, 3], "contribut": 2, "best": 2, "worst": 2, "formula": 2, "fp": 2, "intuit": 2, "abil": 2, "find": 2, "binaryfairnessmetr": [2, 3, 5], "contain": 2, "varieti": 2, "averageodd": 2, "_basebinaryfair": 2, "is_memb": [2, 3, 5], "membership_label": 2, "str": 2, "int": 2, "odd": [2, 3], "within": 2, "ani": [2, 4], "homogen": 2, "we": 2, "cannot": 2, "tnr": 2, "fnr": [2, 3], "nan": 2, "black": 2, "box": 2, "membership": 2, "disparateimpact": 2, "alia": 2, "binarydisparateimpact": 2, "equalopportun": 2, "opportun": [2, 3], "fnrdiffer": 2, "fordiffer": 2, "omiss": [2, 3], "FOR": [2, 3], "generalizedentropyindex": 2, "positive_label_nam": 2, "gener": [2, 3], "entropi": [2, 3], "index": [2, 3], "3": [2, 3, 4, 5], "regul": 2, "part": 2, "distribut": 2, "algorithm": [2, 3], "predictiveequ": 2, "race": 2, "draw": 2, "analogi": 2, "gender": 2, "men": 2, "incorrectli": 2, "woman": 2, "formal": 2, "statisticalpar": [2, 3, 5], "binarystatisticalpar": 2, "theilindex": 2, "theil": [2, 3], "get_all_scor": [2, 3, 5], "datafram": [2, 3, 5], "tabul": 2, "panda": [2, 3, 4, 5], "frame": 2, "multiclassfairnessmetr": [2, 3, 5], "multi": [2, 3, 5], "multidisparateimpact": 2, "multistatisticalpar": 2, "list_of_class": 2, "binarymitig": [2, 3, 5], "equalizedodd": [2, 3, 5], "seed": 2, "_basemitig": 2, "fit": 2, "idea": 2, "imagin": 2, "convex": 2, "hull": 2, "satisfi": 2, "either": 2, "predictor": 2, "might": 2, "possibl": 2, "without": 2, "4": [2, 3, 5], "output": 2, "tupl": 2, "four": 2, "appli": 2, "mix": [2, 3, 5], "new": 2, "unseen": 2, "fairer": 2, "nati": 2, "advanc": 2, "29": 2, "fit_transform": 2, "transform": [2, 3, 5], "current": 2, "fair_predict": [2, 3, 5], "fair_likelihood": [2, 3, 5], "probabilist": 2, "here": 2, "so": 2, "trade": 2, "off": 2, "repair": 2, "lower": [2, 3, 5], "relationship": 2, "linear": 2, "depend": [2, 4], "binaryrecometr": [2, 3, 5], "click_column": [2, 3, 5], "user_id_column": 2, "user_id": [2, 3, 5], "item_id_column": 2, "item_id": [2, 3, 5], "_baserecommend": 2, "That": 2, "seen": 2, "actual_result": 2, "predicted_result": 2, "batch_accumul": 2, "bool": 2, "return_extended_result": 2, "dict": 2, "scenario": 2, "control": 2, "whole": [2, 4], "assum": 2, "you": [2, 4], "full": 2, "want": 2, "itself": 2, "print": [2, 3, 5], "actual_respons": 2, "68": 2, "extend": 2, "auxiliari": 2, "support": 2, "addit": 2, "122": 2, "multipl": 2, "batch": 2, "therefor": 2, "call": 2, "actual_responses_batch": 2, "recommendations_batch": 2, "auc_batch": 2, "auc_acc": 2, "accumul": 2, "overal": 2, "65": 2, "12": 2, "log": 2, "should": [2, 4], "minimum": 2, "column": 2, "includ": 2, "self": 2, "_user_id_column": 2, "_item_id_column": 2, "anyth": 2, "els": 2, "mai": 2, "need": 2, "row": 2, "associ": 2, "per": 2, "howev": 2, "specif": 2, "must": 2, "singl": 2, "specifi": 2, "allow": 2, "pass": [2, 4], "minibatch": 2, "reduc": 2, "memori": 2, "footprint": 2, "integr": 2, "easili": 2, "train": [2, 3, 5], "determin": 2, "abov": 2, "ctr": [2, 3, 5], "value_column": 2, "propensity_column": 2, "click": [2, 3, 5], "through": [2, 3], "equat": 2, "sigma": 2, "316": 2, "ctr_batch": 2, "ctr_acc": 2, "453": 2, "rankingrecometr": [2, 3, 5], "map": [2, 3, 5], "mean": [2, 3], "take": 2, "ndcg": [2, 3, 5], "normal": [2, 3], "discount": [2, 3], "cumul": [2, 3], "gain": [2, 3], "log2": 2, "among": 2, "diversityrecometr": 2, "interlistdivers": 2, "callabl": 2, "n_job": 2, "working_memori": 2, "inter": [2, 3], "ignor": 2, "kept": 2, "make": 2, "design": 2, "intralistdivers": 2, "item_featur": 2, "intra": [2, 3], "research": 3, "adher": 3, "pep": 3, "8": [3, 5], "heavili": 3, "develop": 3, "artifici": 3, "intellig": 3, "center": 3, "excel": 3, "fidel": 3, "invest": 3, "dispar": 3, "impact": 3, "statist": 3, "pariti": 3, "divers": 3, "binary_predict": [3, 5], "multi_class_predict": [3, 5], "multi_class_multi_label_predict": [3, 5], "multi_metr": [3, 5], "descript": [3, 5], "bound": [3, 5], "lower_bound": [3, 5], "upper": [3, 5], "upper_bound": [3, 5], "ideal": [3, 5], "ideal_valu": [3, 5], "6": [3, 4, 5], "7": [3, 5], "befor": [3, 5], "after": [3, 4, 5], "30": [3, 5], "ncdg_k": [3, 5], "precision_k": [3, 5], "recall_k": [3, 5], "map_k": [3, 5], "ncdg": [3, 5], "f1_score": [3, 5], "host": 3, "github": 3, "instal": 3, "requir": 3, "pip": 3, "your": 3, "setup": 3, "upgrad": 3, "about": 3, "rank": 3, "public": 3, "api": 3, "multiclass": 3, "modul": 3, "altern": 4, "build": 4, "python": 4, "packag": 4, "numpi": 4, "txt": 4, "necessari": 4, "follow": 4, "command": 4, "wheel": 4, "platform": 4, "scratch": 4, "setuptool": 4, "py": 4, "bdist_wheel": 4, "dist": 4, "py3": 4, "whl": 4, "To": 4, "confirm": 4, "clone": 4, "repo": 4, "success": 4, "first": 4, "quick": 4, "start": 4, "unittest": 4, "discov": 4, "v": 4, "latest": 4}, "objects": {"": [[2, 0, 0, "-", "jurity"]], "jurity.classification": [[2, 1, 1, "", "BinaryClassificationMetrics"]], "jurity.classification.BinaryClassificationMetrics": [[2, 1, 1, "", "AUC"], [2, 1, 1, "", "Accuracy"], [2, 1, 1, "", "F1"], [2, 1, 1, "", "Precision"], [2, 1, 1, "", "Recall"]], "jurity.classification.BinaryClassificationMetrics.AUC": [[2, 2, 1, "", "get_score"]], "jurity.classification.BinaryClassificationMetrics.Accuracy": [[2, 2, 1, "", "get_score"]], "jurity.classification.BinaryClassificationMetrics.F1": [[2, 2, 1, "", "get_score"]], "jurity.classification.BinaryClassificationMetrics.Precision": [[2, 2, 1, "", "get_score"]], "jurity.classification.BinaryClassificationMetrics.Recall": [[2, 2, 1, "", "get_score"]], "jurity.fairness": [[2, 1, 1, "", "BinaryFairnessMetrics"], [2, 1, 1, "", "MultiClassFairnessMetrics"]], "jurity.fairness.BinaryFairnessMetrics": [[2, 1, 1, "", "AverageOdds"], [2, 3, 1, "", "DisparateImpact"], [2, 1, 1, "", "EqualOpportunity"], [2, 1, 1, "", "FNRDifference"], [2, 1, 1, "", "FORDifference"], [2, 1, 1, "", "GeneralizedEntropyIndex"], [2, 1, 1, "", "PredictiveEquality"], [2, 3, 1, "", "StatisticalParity"], [2, 1, 1, "", "TheilIndex"], [2, 2, 1, "", "get_all_scores"]], "jurity.fairness.BinaryFairnessMetrics.AverageOdds": [[2, 2, 1, "", "get_score"]], "jurity.fairness.BinaryFairnessMetrics.EqualOpportunity": [[2, 2, 1, "", "get_score"]], "jurity.fairness.BinaryFairnessMetrics.FNRDifference": [[2, 2, 1, "", "get_score"]], "jurity.fairness.BinaryFairnessMetrics.FORDifference": [[2, 2, 1, "", "get_score"]], "jurity.fairness.BinaryFairnessMetrics.GeneralizedEntropyIndex": [[2, 2, 1, "", "get_score"]], "jurity.fairness.BinaryFairnessMetrics.PredictiveEquality": [[2, 2, 1, "", "get_score"]], "jurity.fairness.BinaryFairnessMetrics.TheilIndex": [[2, 2, 1, "", "get_score"]], "jurity.fairness.MultiClassFairnessMetrics": [[2, 3, 1, "", "DisparateImpact"], [2, 3, 1, "", "StatisticalParity"], [2, 2, 1, "", "get_all_scores"]], "jurity.mitigation": [[2, 1, 1, "", "BinaryMitigation"]], "jurity.mitigation.BinaryMitigation": [[2, 1, 1, "", "EqualizedOdds"]], "jurity.mitigation.BinaryMitigation.EqualizedOdds": [[2, 2, 1, "", "fit"], [2, 2, 1, "", "fit_transform"], [2, 2, 1, "", "transform"]], "jurity.recommenders": [[2, 1, 1, "", "BinaryRecoMetrics"], [2, 1, 1, "", "DiversityRecoMetrics"], [2, 1, 1, "", "RankingRecoMetrics"]], "jurity.recommenders.BinaryRecoMetrics": [[2, 1, 1, "", "AUC"], [2, 1, 1, "", "CTR"]], "jurity.recommenders.BinaryRecoMetrics.AUC": [[2, 2, 1, "", "get_score"]], "jurity.recommenders.BinaryRecoMetrics.CTR": [[2, 2, 1, "", "get_score"]], "jurity.recommenders.DiversityRecoMetrics": [[2, 1, 1, "", "InterListDiversity"], [2, 1, 1, "", "IntraListDiversity"]], "jurity.recommenders.DiversityRecoMetrics.InterListDiversity": [[2, 2, 1, "", "get_score"]], "jurity.recommenders.DiversityRecoMetrics.IntraListDiversity": [[2, 2, 1, "", "get_score"]], "jurity.recommenders.RankingRecoMetrics": [[2, 1, 1, "", "MAP"], [2, 1, 1, "", "NDCG"], [2, 1, 1, "", "Precision"], [2, 1, 1, "", "Recall"]], "jurity.recommenders.RankingRecoMetrics.MAP": [[2, 2, 1, "", "get_score"]], "jurity.recommenders.RankingRecoMetrics.NDCG": [[2, 2, 1, "", "get_score"]], "jurity.recommenders.RankingRecoMetrics.Precision": [[2, 2, 1, "", "get_score"]], "jurity.recommenders.RankingRecoMetrics.Recall": [[2, 2, 1, "", "get_score"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"about": [0, 1], "algorithm": 0, "fair": [0, 2, 3, 5], "averag": [0, 1], "odd": 0, "dispar": 0, "impact": 0, "equal": 0, "opportun": 0, "fnr": 0, "differ": 0, "FOR": 0, "gener": 0, "entropi": 0, "index": 0, "predict": 0, "statist": 0, "pariti": 0, "theil": 0, "recommend": [1, 2, 3, 5], "metric": [1, 2, 3, 5], "binari": [1, 2], "ctr": 1, "click": 1, "through": 1, "rate": 1, "auc": 1, "area": 1, "under": 1, "curv": 1, "rank": [1, 2], "precis": 1, "recal": 1, "map": 1, "mean": 1, "ndcg": 1, "normal": 1, "discount": 1, "cumul": 1, "gain": 1, "divers": [1, 2], "inter": 1, "list": 1, "intra": 1, "juriti": [2, 3], "public": 2, "api": 2, "classif": [2, 3, 5], "multiclass": 2, "bia": [2, 3, 5], "mitig": [2, 3, 5], "evalu": 3, "librari": [3, 4], "avail": 3, "techniqu": 3, "quick": [3, 5], "start": [3, 5], "calcul": [3, 5], "fit": [3, 5], "appli": [3, 5], "sourc": [3, 4], "code": [3, 4], "content": 3, "indic": 3, "tabl": 3, "instal": 4, "option": 4, "requir": 4, "via": 4, "pip": 4, "from": 4, "test": 4, "your": 4, "setup": 4, "upgrad": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"About Algorithmic Fairness": [[0, "about-algorithmic-fairness"]], "Average Odds": [[0, "average-odds"]], "Disparate Impact": [[0, "disparate-impact"]], "Equal Opportunity": [[0, "equal-opportunity"]], "FNR Difference": [[0, "fnr-difference"]], "FOR Difference": [[0, "for-difference"]], "Generalized Entropy Index": [[0, "generalized-entropy-index"]], "Predictive Equality": [[0, "predictive-equality"]], "Statistical Parity": [[0, "statistical-parity"]], "Theil Index": [[0, "theil-index"]], "Equalized Odds": [[0, "equalized-odds"]], "About Recommenders Metrics": [[1, "about-recommenders-metrics"]], "Binary Recommender Metrics": [[1, "binary-recommender-metrics"]], "CTR: Click-through Rate": [[1, "ctr-click-through-rate"]], "AUC: Area Under the Curve": [[1, "auc-area-under-the-curve"]], "Ranking Recommender Metrics": [[1, "ranking-recommender-metrics"]], "Precision": [[1, "precision"]], "Recall": [[1, "recall"]], "MAP: Mean Average Precision": [[1, "map-mean-average-precision"]], "NDCG: Normalized Discounted Cumulative Gain": [[1, "ndcg-normalized-discounted-cumulative-gain"]], "Diversity Recommender Metrics": [[1, "diversity-recommender-metrics"]], "Inter-List Diversity": [[1, "inter-list-diversity"]], "Intra-List Diversity": [[1, "intra-list-diversity"]], "Jurity Public API": [[2, "module-jurity"]], "Binary Classification Metrics": [[2, "binary-classification-metrics"]], "Binary Fairness Metrics": [[2, "binary-fairness-metrics"]], "Multiclass Fairness Metrics": [[2, "multiclass-fairness-metrics"]], "Binary Bias Mitigation": [[2, "binary-bias-mitigation"]], "Binary Recommenders Metrics": [[2, "binary-recommenders-metrics"]], "Ranking Recommenders Metrics": [[2, "ranking-recommenders-metrics"]], "Diversity Recommenders Metrics": [[2, "diversity-recommenders-metrics"]], "Jurity: Fairness & Evaluation Library": [[3, "jurity-fairness-evaluation-library"]], "Available Fairness Metrics": [[3, "available-fairness-metrics"]], "Available Bias Mitigation Techniques": [[3, "available-bias-mitigation-techniques"]], "Available Recommenders Metrics": [[3, "available-recommenders-metrics"]], "Available Classification Metrics": [[3, "available-classification-metrics"]], "Quick Start": [[3, "quick-start"], [5, "quick-start"]], "Calculate Fairness Metrics": [[3, "calculate-fairness-metrics"], [5, "calculate-fairness-metrics"]], "Fit and Apply Bias Mitigation": [[3, "fit-and-apply-bias-mitigation"], [5, "fit-and-apply-bias-mitigation"]], "Calculate Recommenders Metrics": [[3, "calculate-recommenders-metrics"], [5, "calculate-recommenders-metrics"]], "Calculate Classification Metrics": [[3, "calculate-classification-metrics"], [5, "calculate-classification-metrics"]], "Source Code": [[3, "source-code"]], "Contents": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "Installation": [[4, "installation"]], "Installation Options": [[4, null]], "Requirements": [[4, "requirements"]], "Install via pip": [[4, "install-via-pip"]], "Install from source code": [[4, "install-from-source-code"]], "Test Your Setup": [[4, "test-your-setup"]], "Upgrading the Library": [[4, "upgrading-the-library"]]}, "indexentries": {"binaryclassificationmetrics (class in jurity.classification)": [[2, "jurity.classification.BinaryClassificationMetrics"]], "binaryclassificationmetrics.auc (class in jurity.classification)": [[2, "jurity.classification.BinaryClassificationMetrics.AUC"]], "binaryclassificationmetrics.accuracy (class in jurity.classification)": [[2, "jurity.classification.BinaryClassificationMetrics.Accuracy"]], "binaryclassificationmetrics.f1 (class in jurity.classification)": [[2, "jurity.classification.BinaryClassificationMetrics.F1"]], "binaryclassificationmetrics.precision (class in jurity.classification)": [[2, "jurity.classification.BinaryClassificationMetrics.Precision"]], "binaryclassificationmetrics.recall (class in jurity.classification)": [[2, "jurity.classification.BinaryClassificationMetrics.Recall"]], "binaryfairnessmetrics (class in jurity.fairness)": [[2, "jurity.fairness.BinaryFairnessMetrics"]], "binaryfairnessmetrics.averageodds (class in jurity.fairness)": [[2, "jurity.fairness.BinaryFairnessMetrics.AverageOdds"]], "binaryfairnessmetrics.equalopportunity (class in jurity.fairness)": [[2, "jurity.fairness.BinaryFairnessMetrics.EqualOpportunity"]], "binaryfairnessmetrics.fnrdifference (class in jurity.fairness)": [[2, "jurity.fairness.BinaryFairnessMetrics.FNRDifference"]], "binaryfairnessmetrics.fordifference (class in jurity.fairness)": [[2, "jurity.fairness.BinaryFairnessMetrics.FORDifference"]], "binaryfairnessmetrics.generalizedentropyindex (class in jurity.fairness)": [[2, "jurity.fairness.BinaryFairnessMetrics.GeneralizedEntropyIndex"]], "binaryfairnessmetrics.predictiveequality (class in jurity.fairness)": [[2, "jurity.fairness.BinaryFairnessMetrics.PredictiveEquality"]], "binaryfairnessmetrics.theilindex (class in jurity.fairness)": [[2, "jurity.fairness.BinaryFairnessMetrics.TheilIndex"]], "binarymitigation (class in jurity.mitigation)": [[2, "jurity.mitigation.BinaryMitigation"]], "binarymitigation.equalizedodds (class in jurity.mitigation)": [[2, "jurity.mitigation.BinaryMitigation.EqualizedOdds"]], "binaryrecometrics (class in jurity.recommenders)": [[2, "jurity.recommenders.BinaryRecoMetrics"]], "binaryrecometrics.auc (class in jurity.recommenders)": [[2, "jurity.recommenders.BinaryRecoMetrics.AUC"]], "binaryrecometrics.ctr (class in jurity.recommenders)": [[2, "jurity.recommenders.BinaryRecoMetrics.CTR"]], "disparateimpact (jurity.fairness.binaryfairnessmetrics attribute)": [[2, "jurity.fairness.BinaryFairnessMetrics.DisparateImpact"]], "disparateimpact (jurity.fairness.multiclassfairnessmetrics attribute)": [[2, "jurity.fairness.MultiClassFairnessMetrics.DisparateImpact"]], "diversityrecometrics (class in jurity.recommenders)": [[2, "jurity.recommenders.DiversityRecoMetrics"]], "diversityrecometrics.interlistdiversity (class in jurity.recommenders)": [[2, "jurity.recommenders.DiversityRecoMetrics.InterListDiversity"]], "diversityrecometrics.intralistdiversity (class in jurity.recommenders)": [[2, "jurity.recommenders.DiversityRecoMetrics.IntraListDiversity"]], "multiclassfairnessmetrics (class in jurity.fairness)": [[2, "jurity.fairness.MultiClassFairnessMetrics"]], "rankingrecometrics (class in jurity.recommenders)": [[2, "jurity.recommenders.RankingRecoMetrics"]], "rankingrecometrics.map (class in jurity.recommenders)": [[2, "jurity.recommenders.RankingRecoMetrics.MAP"]], "rankingrecometrics.ndcg (class in jurity.recommenders)": [[2, "jurity.recommenders.RankingRecoMetrics.NDCG"]], "rankingrecometrics.precision (class in jurity.recommenders)": [[2, "jurity.recommenders.RankingRecoMetrics.Precision"]], "rankingrecometrics.recall (class in jurity.recommenders)": [[2, "jurity.recommenders.RankingRecoMetrics.Recall"]], "statisticalparity (jurity.fairness.binaryfairnessmetrics attribute)": [[2, "jurity.fairness.BinaryFairnessMetrics.StatisticalParity"]], "statisticalparity (jurity.fairness.multiclassfairnessmetrics attribute)": [[2, "jurity.fairness.MultiClassFairnessMetrics.StatisticalParity"]], "fit() (jurity.mitigation.binarymitigation.equalizedodds method)": [[2, "jurity.mitigation.BinaryMitigation.EqualizedOdds.fit"]], "fit_transform() (jurity.mitigation.binarymitigation.equalizedodds method)": [[2, "jurity.mitigation.BinaryMitigation.EqualizedOdds.fit_transform"]], "get_all_scores() (jurity.fairness.binaryfairnessmetrics static method)": [[2, "jurity.fairness.BinaryFairnessMetrics.get_all_scores"]], "get_all_scores() (jurity.fairness.multiclassfairnessmetrics static method)": [[2, "jurity.fairness.MultiClassFairnessMetrics.get_all_scores"]], "get_score() (jurity.classification.binaryclassificationmetrics.auc static method)": [[2, "jurity.classification.BinaryClassificationMetrics.AUC.get_score"]], "get_score() (jurity.classification.binaryclassificationmetrics.accuracy static method)": [[2, "jurity.classification.BinaryClassificationMetrics.Accuracy.get_score"]], "get_score() (jurity.classification.binaryclassificationmetrics.f1 static method)": [[2, "jurity.classification.BinaryClassificationMetrics.F1.get_score"]], "get_score() (jurity.classification.binaryclassificationmetrics.precision static method)": [[2, "jurity.classification.BinaryClassificationMetrics.Precision.get_score"]], "get_score() (jurity.classification.binaryclassificationmetrics.recall static method)": [[2, "jurity.classification.BinaryClassificationMetrics.Recall.get_score"]], "get_score() (jurity.fairness.binaryfairnessmetrics.averageodds static method)": [[2, "jurity.fairness.BinaryFairnessMetrics.AverageOdds.get_score"]], "get_score() (jurity.fairness.binaryfairnessmetrics.equalopportunity static method)": [[2, "jurity.fairness.BinaryFairnessMetrics.EqualOpportunity.get_score"]], "get_score() (jurity.fairness.binaryfairnessmetrics.fnrdifference static method)": [[2, "jurity.fairness.BinaryFairnessMetrics.FNRDifference.get_score"]], "get_score() (jurity.fairness.binaryfairnessmetrics.fordifference static method)": [[2, "jurity.fairness.BinaryFairnessMetrics.FORDifference.get_score"]], "get_score() (jurity.fairness.binaryfairnessmetrics.generalizedentropyindex method)": [[2, "jurity.fairness.BinaryFairnessMetrics.GeneralizedEntropyIndex.get_score"]], "get_score() (jurity.fairness.binaryfairnessmetrics.predictiveequality static method)": [[2, "jurity.fairness.BinaryFairnessMetrics.PredictiveEquality.get_score"]], "get_score() (jurity.fairness.binaryfairnessmetrics.theilindex method)": [[2, "jurity.fairness.BinaryFairnessMetrics.TheilIndex.get_score"]], "get_score() (jurity.recommenders.binaryrecometrics.auc method)": [[2, "jurity.recommenders.BinaryRecoMetrics.AUC.get_score"]], "get_score() (jurity.recommenders.binaryrecometrics.ctr method)": [[2, "jurity.recommenders.BinaryRecoMetrics.CTR.get_score"]], "get_score() (jurity.recommenders.diversityrecometrics.interlistdiversity method)": [[2, "jurity.recommenders.DiversityRecoMetrics.InterListDiversity.get_score"]], "get_score() (jurity.recommenders.diversityrecometrics.intralistdiversity method)": [[2, "jurity.recommenders.DiversityRecoMetrics.IntraListDiversity.get_score"]], "get_score() (jurity.recommenders.rankingrecometrics.map method)": [[2, "jurity.recommenders.RankingRecoMetrics.MAP.get_score"]], "get_score() (jurity.recommenders.rankingrecometrics.ndcg method)": [[2, "jurity.recommenders.RankingRecoMetrics.NDCG.get_score"]], "get_score() (jurity.recommenders.rankingrecometrics.precision method)": [[2, "jurity.recommenders.RankingRecoMetrics.Precision.get_score"]], "get_score() (jurity.recommenders.rankingrecometrics.recall method)": [[2, "jurity.recommenders.RankingRecoMetrics.Recall.get_score"]], "jurity": [[2, "module-jurity"]], "module": [[2, "module-jurity"]], "transform() (jurity.mitigation.binarymitigation.equalizedodds method)": [[2, "jurity.mitigation.BinaryMitigation.EqualizedOdds.transform"]]}})